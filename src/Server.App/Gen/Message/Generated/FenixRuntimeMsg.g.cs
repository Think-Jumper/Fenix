// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Resolvers
{
    using System;

    public class FenixRuntimeResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new FenixRuntimeResolver();

        private FenixRuntimeResolver()
        {
        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.Formatter;
        }

        private static class FormatterCache<T>
        {
            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

            static FormatterCache()
            {
                var f = FenixRuntimeResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class FenixRuntimeResolverGetFormatterHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<Type, int> lookup;

        static FenixRuntimeResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<Type, int>(45)
            {
                { typeof(global::System.Collections.Generic.Dictionary<ulong, string>), 0 },
                { typeof(global::Fenix.Common.DefaultErrCode), 1 },
                { typeof(global::Fenix.Common.DisconnectReason), 2 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq), 3 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq.Callback), 4 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__CreateActorReq), 5 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__CreateActorReq.Callback), 6 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq), 7 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq.Callback), 8 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf), 9 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf.Callback), 10 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__OnServerActorEnableNtf), 11 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf), 12 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf.Callback), 13 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq), 14 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq.Callback), 15 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__RegisterReq), 16 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq), 17 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq.Callback), 18 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq), 19 },
                { typeof(global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq.Callback), 20 },
                { typeof(global::Fenix.Common.Message.BindClientActorReq), 21 },
                { typeof(global::Fenix.Common.Message.BindClientActorReq.Callback), 22 },
                { typeof(global::Fenix.Common.Message.CreateActorReq), 23 },
                { typeof(global::Fenix.Common.Message.CreateActorReq.Callback), 24 },
                { typeof(global::Fenix.Common.Message.MigrateActorReq), 25 },
                { typeof(global::Fenix.Common.Message.MigrateActorReq.Callback), 26 },
                { typeof(global::Fenix.Common.Message.OnBeforeDisconnectNtf), 27 },
                { typeof(global::Fenix.Common.Message.OnBeforeDisconnectNtf.Callback), 28 },
                { typeof(global::Fenix.Common.Message.OnServerActorEnableNtf), 29 },
                { typeof(global::Fenix.Common.Message.ReconnectServerActorNtf), 30 },
                { typeof(global::Fenix.Common.Message.ReconnectServerActorNtf.Callback), 31 },
                { typeof(global::Fenix.Common.Message.RegisterClientReq), 32 },
                { typeof(global::Fenix.Common.Message.RegisterClientReq.Callback), 33 },
                { typeof(global::Fenix.Common.Message.RegisterReq), 34 },
                { typeof(global::Fenix.Common.Message.RemoveActorReq), 35 },
                { typeof(global::Fenix.Common.Message.RemoveActorReq.Callback), 36 },
                { typeof(global::Fenix.Common.Message.RemoveClientActorReq), 37 },
                { typeof(global::Fenix.Common.Message.RemoveClientActorReq.Callback), 38 },
                { typeof(global::Fenix.Common.Message.SyncFieldNtf), 39 },
                { typeof(global::Fenix.Common.Message.SyncNtf), 40 },
                { typeof(global::Fenix.Common.Rpc.IMessage), 41 },
                { typeof(global::Fenix.Common.Rpc.IMessageWithCallback), 42 },
                { typeof(global::Fenix.HostInfo), 43 },
                { typeof(global::Fenix.Packet), 44 },
            };
        }

        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new global::MessagePack.Formatters.DictionaryFormatter<ulong, string>();
                case 1: return new MessagePack.Formatters.Fenix.Common.DefaultErrCodeFormatter();
                case 2: return new MessagePack.Formatters.Fenix.Common.DisconnectReasonFormatter();
                case 3: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__BindClientActorReqFormatter();
                case 4: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__BindClientActorReq_CallbackFormatter();
                case 5: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__CreateActorReqFormatter();
                case 6: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__CreateActorReq_CallbackFormatter();
                case 7: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__MigrateActorReqFormatter();
                case 8: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__MigrateActorReq_CallbackFormatter();
                case 9: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtfFormatter();
                case 10: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf_CallbackFormatter();
                case 11: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__OnServerActorEnableNtfFormatter();
                case 12: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtfFormatter();
                case 13: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf_CallbackFormatter();
                case 14: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__RegisterClientReqFormatter();
                case 15: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__RegisterClientReq_CallbackFormatter();
                case 16: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__RegisterReqFormatter();
                case 17: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__RemoveActorReqFormatter();
                case 18: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__RemoveActorReq_CallbackFormatter();
                case 19: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__RemoveClientActorReqFormatter();
                case 20: return new MessagePack.Formatters.Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq_CallbackFormatter();
                case 21: return new MessagePack.Formatters.Fenix.Common.Message.BindClientActorReqFormatter();
                case 22: return new MessagePack.Formatters.Fenix.Common.Message.BindClientActorReq_CallbackFormatter();
                case 23: return new MessagePack.Formatters.Fenix.Common.Message.CreateActorReqFormatter();
                case 24: return new MessagePack.Formatters.Fenix.Common.Message.CreateActorReq_CallbackFormatter();
                case 25: return new MessagePack.Formatters.Fenix.Common.Message.MigrateActorReqFormatter();
                case 26: return new MessagePack.Formatters.Fenix.Common.Message.MigrateActorReq_CallbackFormatter();
                case 27: return new MessagePack.Formatters.Fenix.Common.Message.OnBeforeDisconnectNtfFormatter();
                case 28: return new MessagePack.Formatters.Fenix.Common.Message.OnBeforeDisconnectNtf_CallbackFormatter();
                case 29: return new MessagePack.Formatters.Fenix.Common.Message.OnServerActorEnableNtfFormatter();
                case 30: return new MessagePack.Formatters.Fenix.Common.Message.ReconnectServerActorNtfFormatter();
                case 31: return new MessagePack.Formatters.Fenix.Common.Message.ReconnectServerActorNtf_CallbackFormatter();
                case 32: return new MessagePack.Formatters.Fenix.Common.Message.RegisterClientReqFormatter();
                case 33: return new MessagePack.Formatters.Fenix.Common.Message.RegisterClientReq_CallbackFormatter();
                case 34: return new MessagePack.Formatters.Fenix.Common.Message.RegisterReqFormatter();
                case 35: return new MessagePack.Formatters.Fenix.Common.Message.RemoveActorReqFormatter();
                case 36: return new MessagePack.Formatters.Fenix.Common.Message.RemoveActorReq_CallbackFormatter();
                case 37: return new MessagePack.Formatters.Fenix.Common.Message.RemoveClientActorReqFormatter();
                case 38: return new MessagePack.Formatters.Fenix.Common.Message.RemoveClientActorReq_CallbackFormatter();
                case 39: return new MessagePack.Formatters.Fenix.Common.Message.SyncFieldNtfFormatter();
                case 40: return new MessagePack.Formatters.Fenix.Common.Message.SyncNtfFormatter();
                case 41: return new MessagePack.Formatters.Fenix.Common.Rpc.IMessageFormatter();
                case 42: return new MessagePack.Formatters.Fenix.Common.Rpc.IMessageWithCallbackFormatter();
                case 43: return new MessagePack.Formatters.Fenix.HostInfoFormatter();
                case 44: return new MessagePack.Formatters.Fenix.PacketFormatter();
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1649 // File name should match first type name


// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.Fenix.Common
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class DefaultErrCodeFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.DefaultErrCode>
    {
        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.DefaultErrCode value, global::MessagePack.MessagePackSerializerOptions options)
        {
            writer.Write((Int16)value);
        }

        public global::Fenix.Common.DefaultErrCode Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            return (global::Fenix.Common.DefaultErrCode)reader.ReadInt16();
        }
    }

    public sealed class DisconnectReasonFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.DisconnectReason>
    {
        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.DisconnectReason value, global::MessagePack.MessagePackSerializerOptions options)
        {
            writer.Write((Int32)value);
        }

        public global::Fenix.Common.DisconnectReason Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            return (global::Fenix.Common.DisconnectReason)reader.ReadInt32();
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name



// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.Fenix.Common.Message
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class __Fenix__Host__BindClientActorReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.actorName, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __actorName__ = default(string);
            var __callback__ = default(global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __actorName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq();
            ____result.actorName = __actorName__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__BindClientActorReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__BindClientActorReq.Callback();
            ____result.code = __code__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__CreateActorReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__CreateActorReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__CreateActorReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.typename, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.name, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__CreateActorReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__CreateActorReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __typename__ = default(string);
            var __name__ = default(string);
            var __callback__ = default(global::Fenix.Common.Message.__Fenix__Host__CreateActorReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __typename__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __name__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__CreateActorReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__CreateActorReq();
            ____result.typename = __typename__;
            ____result.name = __name__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__CreateActorReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__CreateActorReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__CreateActorReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.arg1, options);
            writer.Write(value.arg2);
        }

        public global::Fenix.Common.Message.__Fenix__Host__CreateActorReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);
            var __arg1__ = default(string);
            var __arg2__ = default(ulong);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __arg1__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __arg2__ = reader.ReadUInt64();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__CreateActorReq.Callback();
            ____result.code = __code__;
            ____result.arg1 = __arg1__;
            ____result.arg2 = __arg2__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__MigrateActorReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            writer.Write(value.actorId);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __actorId__ = default(ulong);
            var __callback__ = default(global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __actorId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq();
            ____result.actorId = __actorId__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__MigrateActorReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
            formatterResolver.GetFormatterWithVerify<byte[]>().Serialize(ref writer, value.arg1, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);
            var __arg1__ = default(byte[]);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __arg1__ = formatterResolver.GetFormatterWithVerify<byte[]>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__MigrateActorReq.Callback();
            ____result.code = __code__;
            ____result.arg1 = __arg1__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__OnBeforeDisconnectNtfFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DisconnectReason>().Serialize(ref writer, value.reason, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __reason__ = default(global::Fenix.Common.DisconnectReason);
            var __callback__ = default(global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __reason__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DisconnectReason>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf();
            ____result.reason = __reason__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__OnBeforeDisconnectNtf_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(0);
        }

        public global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__OnBeforeDisconnectNtf.Callback();
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__OnServerActorEnableNtfFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__OnServerActorEnableNtf>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__OnServerActorEnableNtf value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.actorName, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__OnServerActorEnableNtf Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __actorName__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __actorName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__OnServerActorEnableNtf();
            ____result.actorName = __actorName__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__ReconnectServerActorNtfFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(8);
            writer.Write(value.hostId);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.hostName, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.hostIP, options);
            writer.Write(value.hostPort);
            writer.Write(value.actorId);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.actorName, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.aTypeName, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __hostId__ = default(ulong);
            var __hostName__ = default(string);
            var __hostIP__ = default(string);
            var __hostPort__ = default(int);
            var __actorId__ = default(ulong);
            var __actorName__ = default(string);
            var __aTypeName__ = default(string);
            var __callback__ = default(global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __hostId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __hostName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __hostIP__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 3:
                        __hostPort__ = reader.ReadInt32();
                        break;
                    case 4:
                        __actorId__ = reader.ReadUInt64();
                        break;
                    case 5:
                        __actorName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 6:
                        __aTypeName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 7:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf();
            ____result.hostId = __hostId__;
            ____result.hostName = __hostName__;
            ____result.hostIP = __hostIP__;
            ____result.hostPort = __hostPort__;
            ____result.actorId = __actorId__;
            ____result.actorName = __actorName__;
            ____result.aTypeName = __aTypeName__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__ReconnectServerActorNtf_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__ReconnectServerActorNtf.Callback();
            ____result.code = __code__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__RegisterClientReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            writer.Write(value.hostId);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.hostName, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __hostId__ = default(ulong);
            var __hostName__ = default(string);
            var __callback__ = default(global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __hostId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __hostName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq();
            ____result.hostId = __hostId__;
            ____result.hostName = __hostName__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__RegisterClientReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.HostInfo>().Serialize(ref writer, value.arg1, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);
            var __arg1__ = default(global::Fenix.HostInfo);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __arg1__ = formatterResolver.GetFormatterWithVerify<global::Fenix.HostInfo>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__RegisterClientReq.Callback();
            ____result.code = __code__;
            ____result.arg1 = __arg1__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__RegisterReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__RegisterReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__RegisterReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            writer.Write(value.hostId);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.hostName, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__RegisterReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __hostId__ = default(ulong);
            var __hostName__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __hostId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __hostName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__RegisterReq();
            ____result.hostId = __hostId__;
            ____result.hostName = __hostName__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__RemoveActorReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            writer.Write(value.actorId);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __actorId__ = default(ulong);
            var __callback__ = default(global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __actorId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq();
            ____result.actorId = __actorId__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__RemoveActorReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__RemoveActorReq.Callback();
            ____result.code = __code__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__RemoveClientActorReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            writer.Write(value.actorId);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DisconnectReason>().Serialize(ref writer, value.reason, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __actorId__ = default(ulong);
            var __reason__ = default(global::Fenix.Common.DisconnectReason);
            var __callback__ = default(global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __actorId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __reason__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DisconnectReason>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq();
            ____result.actorId = __actorId__;
            ____result.reason = __reason__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class __Fenix__Host__RemoveClientActorReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
        }

        public global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.__Fenix__Host__RemoveClientActorReq.Callback();
            ____result.code = __code__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class BindClientActorReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.BindClientActorReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.BindClientActorReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.actorName, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.BindClientActorReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.BindClientActorReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __actorName__ = default(string);
            var __callback__ = default(global::Fenix.Common.Message.BindClientActorReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __actorName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.BindClientActorReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.BindClientActorReq();
            ____result.actorName = __actorName__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class BindClientActorReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.BindClientActorReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.BindClientActorReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
        }

        public global::Fenix.Common.Message.BindClientActorReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.BindClientActorReq.Callback();
            ____result.code = __code__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class CreateActorReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.CreateActorReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.CreateActorReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.typename, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.name, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.CreateActorReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.CreateActorReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __typename__ = default(string);
            var __name__ = default(string);
            var __callback__ = default(global::Fenix.Common.Message.CreateActorReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __typename__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __name__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.CreateActorReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.CreateActorReq();
            ____result.typename = __typename__;
            ____result.name = __name__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class CreateActorReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.CreateActorReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.CreateActorReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.arg1, options);
            writer.Write(value.arg2);
        }

        public global::Fenix.Common.Message.CreateActorReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);
            var __arg1__ = default(string);
            var __arg2__ = default(ulong);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __arg1__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __arg2__ = reader.ReadUInt64();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.CreateActorReq.Callback();
            ____result.code = __code__;
            ____result.arg1 = __arg1__;
            ____result.arg2 = __arg2__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class MigrateActorReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.MigrateActorReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.MigrateActorReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            writer.Write(value.actorId);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.MigrateActorReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.MigrateActorReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __actorId__ = default(ulong);
            var __callback__ = default(global::Fenix.Common.Message.MigrateActorReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __actorId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.MigrateActorReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.MigrateActorReq();
            ____result.actorId = __actorId__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class MigrateActorReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.MigrateActorReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.MigrateActorReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
            formatterResolver.GetFormatterWithVerify<byte[]>().Serialize(ref writer, value.arg1, options);
        }

        public global::Fenix.Common.Message.MigrateActorReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);
            var __arg1__ = default(byte[]);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __arg1__ = formatterResolver.GetFormatterWithVerify<byte[]>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.MigrateActorReq.Callback();
            ____result.code = __code__;
            ____result.arg1 = __arg1__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OnBeforeDisconnectNtfFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.OnBeforeDisconnectNtf>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.OnBeforeDisconnectNtf value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DisconnectReason>().Serialize(ref writer, value.reason, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.OnBeforeDisconnectNtf.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.OnBeforeDisconnectNtf Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __reason__ = default(global::Fenix.Common.DisconnectReason);
            var __callback__ = default(global::Fenix.Common.Message.OnBeforeDisconnectNtf.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __reason__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DisconnectReason>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.OnBeforeDisconnectNtf.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.OnBeforeDisconnectNtf();
            ____result.reason = __reason__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OnBeforeDisconnectNtf_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.OnBeforeDisconnectNtf.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.OnBeforeDisconnectNtf.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(0);
        }

        public global::Fenix.Common.Message.OnBeforeDisconnectNtf.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.OnBeforeDisconnectNtf.Callback();
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OnServerActorEnableNtfFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.OnServerActorEnableNtf>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.OnServerActorEnableNtf value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.actorName, options);
        }

        public global::Fenix.Common.Message.OnServerActorEnableNtf Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __actorName__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __actorName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.OnServerActorEnableNtf();
            ____result.actorName = __actorName__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class ReconnectServerActorNtfFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.ReconnectServerActorNtf>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.ReconnectServerActorNtf value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(8);
            writer.Write(value.hostId);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.hostName, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.hostIP, options);
            writer.Write(value.hostPort);
            writer.Write(value.actorId);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.actorName, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.aTypeName, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.ReconnectServerActorNtf.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.ReconnectServerActorNtf Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __hostId__ = default(ulong);
            var __hostName__ = default(string);
            var __hostIP__ = default(string);
            var __hostPort__ = default(int);
            var __actorId__ = default(ulong);
            var __actorName__ = default(string);
            var __aTypeName__ = default(string);
            var __callback__ = default(global::Fenix.Common.Message.ReconnectServerActorNtf.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __hostId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __hostName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __hostIP__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 3:
                        __hostPort__ = reader.ReadInt32();
                        break;
                    case 4:
                        __actorId__ = reader.ReadUInt64();
                        break;
                    case 5:
                        __actorName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 6:
                        __aTypeName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 7:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.ReconnectServerActorNtf.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.ReconnectServerActorNtf();
            ____result.hostId = __hostId__;
            ____result.hostName = __hostName__;
            ____result.hostIP = __hostIP__;
            ____result.hostPort = __hostPort__;
            ____result.actorId = __actorId__;
            ____result.actorName = __actorName__;
            ____result.aTypeName = __aTypeName__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class ReconnectServerActorNtf_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.ReconnectServerActorNtf.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.ReconnectServerActorNtf.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
        }

        public global::Fenix.Common.Message.ReconnectServerActorNtf.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.ReconnectServerActorNtf.Callback();
            ____result.code = __code__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class RegisterClientReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.RegisterClientReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.RegisterClientReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            writer.Write(value.hostId);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.hostName, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.RegisterClientReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.RegisterClientReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __hostId__ = default(ulong);
            var __hostName__ = default(string);
            var __callback__ = default(global::Fenix.Common.Message.RegisterClientReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __hostId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __hostName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.RegisterClientReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.RegisterClientReq();
            ____result.hostId = __hostId__;
            ____result.hostName = __hostName__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class RegisterClientReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.RegisterClientReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.RegisterClientReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.HostInfo>().Serialize(ref writer, value.arg1, options);
        }

        public global::Fenix.Common.Message.RegisterClientReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);
            var __arg1__ = default(global::Fenix.HostInfo);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __arg1__ = formatterResolver.GetFormatterWithVerify<global::Fenix.HostInfo>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.RegisterClientReq.Callback();
            ____result.code = __code__;
            ____result.arg1 = __arg1__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class RegisterReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.RegisterReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.RegisterReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            writer.Write(value.hostId);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.hostName, options);
        }

        public global::Fenix.Common.Message.RegisterReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __hostId__ = default(ulong);
            var __hostName__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __hostId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __hostName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.RegisterReq();
            ____result.hostId = __hostId__;
            ____result.hostName = __hostName__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class RemoveActorReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.RemoveActorReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.RemoveActorReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            writer.Write(value.actorId);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.RemoveActorReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.RemoveActorReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __actorId__ = default(ulong);
            var __callback__ = default(global::Fenix.Common.Message.RemoveActorReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __actorId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.RemoveActorReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.RemoveActorReq();
            ____result.actorId = __actorId__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class RemoveActorReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.RemoveActorReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.RemoveActorReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
        }

        public global::Fenix.Common.Message.RemoveActorReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.RemoveActorReq.Callback();
            ____result.code = __code__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class RemoveClientActorReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.RemoveClientActorReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.RemoveClientActorReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            writer.Write(value.actorId);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DisconnectReason>().Serialize(ref writer, value.reason, options);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.RemoveClientActorReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Fenix.Common.Message.RemoveClientActorReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __actorId__ = default(ulong);
            var __reason__ = default(global::Fenix.Common.DisconnectReason);
            var __callback__ = default(global::Fenix.Common.Message.RemoveClientActorReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __actorId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __reason__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DisconnectReason>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.Message.RemoveClientActorReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.RemoveClientActorReq();
            ____result.actorId = __actorId__;
            ____result.reason = __reason__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class RemoveClientActorReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.RemoveClientActorReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.RemoveClientActorReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Serialize(ref writer, value.code, options);
        }

        public global::Fenix.Common.Message.RemoveClientActorReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Fenix.Common.DefaultErrCode);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Fenix.Common.DefaultErrCode>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.RemoveClientActorReq.Callback();
            ____result.code = __code__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class SyncFieldNtfFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.SyncFieldNtf>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.SyncFieldNtf value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(5);
            writer.Write(value.actorId);
            writer.Write(value.dataKey);
            formatterResolver.GetFormatterWithVerify<global::Fenix.DataType>().Serialize(ref writer, value.dataType, options);
            writer.Write(value.field);
            formatterResolver.GetFormatterWithVerify<byte[]>().Serialize(ref writer, value.data, options);
        }

        public global::Fenix.Common.Message.SyncFieldNtf Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __actorId__ = default(ulong);
            var __dataKey__ = default(ulong);
            var __dataType__ = default(global::Fenix.DataType);
            var __field__ = default(uint);
            var __data__ = default(byte[]);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __actorId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __dataKey__ = reader.ReadUInt64();
                        break;
                    case 2:
                        __dataType__ = formatterResolver.GetFormatterWithVerify<global::Fenix.DataType>().Deserialize(ref reader, options);
                        break;
                    case 3:
                        __field__ = reader.ReadUInt32();
                        break;
                    case 4:
                        __data__ = formatterResolver.GetFormatterWithVerify<byte[]>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.SyncFieldNtf();
            ____result.actorId = __actorId__;
            ____result.dataKey = __dataKey__;
            ____result.dataType = __dataType__;
            ____result.field = __field__;
            ____result.data = __data__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class SyncNtfFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Message.SyncNtf>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Message.SyncNtf value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(4);
            writer.Write(value.actorId);
            writer.Write(value.dataKey);
            formatterResolver.GetFormatterWithVerify<global::Fenix.DataType>().Serialize(ref writer, value.dataType, options);
            formatterResolver.GetFormatterWithVerify<byte[]>().Serialize(ref writer, value.data, options);
        }

        public global::Fenix.Common.Message.SyncNtf Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __actorId__ = default(ulong);
            var __dataKey__ = default(ulong);
            var __dataType__ = default(global::Fenix.DataType);
            var __data__ = default(byte[]);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __actorId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __dataKey__ = reader.ReadUInt64();
                        break;
                    case 2:
                        __dataType__ = formatterResolver.GetFormatterWithVerify<global::Fenix.DataType>().Deserialize(ref reader, options);
                        break;
                    case 3:
                        __data__ = formatterResolver.GetFormatterWithVerify<byte[]>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Message.SyncNtf();
            ____result.actorId = __actorId__;
            ____result.dataKey = __dataKey__;
            ____result.dataType = __dataType__;
            ____result.data = __data__;
            reader.Depth--;
            return ____result;
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.Fenix.Common.Rpc
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class IMessageFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Rpc.IMessage>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Rpc.IMessage value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(0);
        }

        public global::Fenix.Common.Rpc.IMessage Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Rpc.IMessage();
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class IMessageWithCallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Common.Rpc.IMessageWithCallback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Common.Rpc.IMessageWithCallback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(0);
        }

        public global::Fenix.Common.Rpc.IMessageWithCallback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Common.Rpc.IMessageWithCallback();
            reader.Depth--;
            return ____result;
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.Fenix
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class HostInfoFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.HostInfo>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.HostInfo value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(5);
            writer.Write(value.HostId);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.HostName, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.HostAddr, options);
            formatterResolver.GetFormatterWithVerify<global::System.Collections.Generic.Dictionary<ulong, string>>().Serialize(ref writer, value.ServiceId2Name, options);
            formatterResolver.GetFormatterWithVerify<global::System.Collections.Generic.Dictionary<ulong, string>>().Serialize(ref writer, value.ServiceId2TName, options);
        }

        public global::Fenix.HostInfo Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __HostId__ = default(ulong);
            var __HostName__ = default(string);
            var __HostAddr__ = default(string);
            var __ServiceId2Name__ = default(global::System.Collections.Generic.Dictionary<ulong, string>);
            var __ServiceId2TName__ = default(global::System.Collections.Generic.Dictionary<ulong, string>);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __HostId__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __HostName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __HostAddr__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 3:
                        __ServiceId2Name__ = formatterResolver.GetFormatterWithVerify<global::System.Collections.Generic.Dictionary<ulong, string>>().Deserialize(ref reader, options);
                        break;
                    case 4:
                        __ServiceId2TName__ = formatterResolver.GetFormatterWithVerify<global::System.Collections.Generic.Dictionary<ulong, string>>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.HostInfo();
            ____result.HostId = __HostId__;
            ____result.HostName = __HostName__;
            ____result.HostAddr = __HostAddr__;
            ____result.ServiceId2Name = __ServiceId2Name__;
            ____result.ServiceId2TName = __ServiceId2TName__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PacketFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Fenix.Packet>
    {


        public void Serialize(ref MessagePackWriter writer, global::Fenix.Packet value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(7);
            writer.Write(value.Id);
            writer.Write(value.ProtoCode);
            writer.Write(value.FromHostId);
            writer.Write(value.ToHostId);
            writer.Write(value.FromActorId);
            writer.Write(value.ToActorId);
            formatterResolver.GetFormatterWithVerify<byte[]>().Serialize(ref writer, value.Payload, options);
        }

        public global::Fenix.Packet Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Id__ = default(ulong);
            var __ProtoCode__ = default(uint);
            var __FromHostId__ = default(ulong);
            var __ToHostId__ = default(ulong);
            var __FromActorId__ = default(ulong);
            var __ToActorId__ = default(ulong);
            var __Payload__ = default(byte[]);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Id__ = reader.ReadUInt64();
                        break;
                    case 1:
                        __ProtoCode__ = reader.ReadUInt32();
                        break;
                    case 2:
                        __FromHostId__ = reader.ReadUInt64();
                        break;
                    case 3:
                        __ToHostId__ = reader.ReadUInt64();
                        break;
                    case 4:
                        __FromActorId__ = reader.ReadUInt64();
                        break;
                    case 5:
                        __ToActorId__ = reader.ReadUInt64();
                        break;
                    case 6:
                        __Payload__ = formatterResolver.GetFormatterWithVerify<byte[]>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Fenix.Packet();
            ____result.Id = __Id__;
            ____result.ProtoCode = __ProtoCode__;
            ____result.FromHostId = __FromHostId__;
            ____result.ToHostId = __ToHostId__;
            ____result.FromActorId = __FromActorId__;
            ____result.ToActorId = __ToActorId__;
            ____result.Payload = __Payload__;
            reader.Depth--;
            return ____result;
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

