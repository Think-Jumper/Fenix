// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Resolvers
{
    using System;

    public class ClientAppResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new ClientAppResolver();

        private ClientAppResolver()
        {
        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.Formatter;
        }

        private static class FormatterCache<T>
        {
            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

            static FormatterCache()
            {
                var f = ClientAppResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class ClientAppResolverGetFormatterHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<Type, int> lookup;

        static ClientAppResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<Type, int>(13)
            {
                { typeof(global::Shared.Message.ApiTest2Ntf), 0 },
                { typeof(global::Shared.Message.ApiTestNtf), 1 },
                { typeof(global::Shared.Message.ApiTestNtf.Callback), 2 },
                { typeof(global::Shared.Message.ChangeNameReq), 3 },
                { typeof(global::Shared.Message.ChangeNameReq.Callback), 4 },
                { typeof(global::Shared.Message.CreateAccountReq), 5 },
                { typeof(global::Shared.Message.CreateAccountReq.Callback), 6 },
                { typeof(global::Shared.Message.DeleteAccountReq), 7 },
                { typeof(global::Shared.Message.DeleteAccountReq.Callback), 8 },
                { typeof(global::Shared.Message.LoginReq), 9 },
                { typeof(global::Shared.Message.LoginReq.Callback), 10 },
                { typeof(global::Shared.Message.OnMatchOkReq), 11 },
                { typeof(global::Shared.Message.ResetPasswordReq), 12 },
            };
        }

        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new MessagePack.Formatters.Shared.Message.ApiTest2NtfFormatter();
                case 1: return new MessagePack.Formatters.Shared.Message.ApiTestNtfFormatter();
                case 2: return new MessagePack.Formatters.Shared.Message.ApiTestNtf_CallbackFormatter();
                case 3: return new MessagePack.Formatters.Shared.Message.ChangeNameReqFormatter();
                case 4: return new MessagePack.Formatters.Shared.Message.ChangeNameReq_CallbackFormatter();
                case 5: return new MessagePack.Formatters.Shared.Message.CreateAccountReqFormatter();
                case 6: return new MessagePack.Formatters.Shared.Message.CreateAccountReq_CallbackFormatter();
                case 7: return new MessagePack.Formatters.Shared.Message.DeleteAccountReqFormatter();
                case 8: return new MessagePack.Formatters.Shared.Message.DeleteAccountReq_CallbackFormatter();
                case 9: return new MessagePack.Formatters.Shared.Message.LoginReqFormatter();
                case 10: return new MessagePack.Formatters.Shared.Message.LoginReq_CallbackFormatter();
                case 11: return new MessagePack.Formatters.Shared.Message.OnMatchOkReqFormatter();
                case 12: return new MessagePack.Formatters.Shared.Message.ResetPasswordReqFormatter();
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1649 // File name should match first type name




// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.Shared.Message
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class ApiTest2NtfFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.ApiTest2Ntf>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.ApiTest2Ntf value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.uid, options);
            writer.Write(value.match_type);
        }

        public global::Shared.Message.ApiTest2Ntf Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __uid__ = default(string);
            var __match_type__ = default(int);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __uid__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __match_type__ = reader.ReadInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.ApiTest2Ntf();
            ____result.uid = __uid__;
            ____result.match_type = __match_type__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class ApiTestNtfFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.ApiTestNtf>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.ApiTestNtf value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.uid, options);
            formatterResolver.GetFormatterWithVerify<global::Shared.Message.ApiTestNtf.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Shared.Message.ApiTestNtf Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __uid__ = default(string);
            var __callback__ = default(global::Shared.Message.ApiTestNtf.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __uid__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Shared.Message.ApiTestNtf.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.ApiTestNtf();
            ____result.uid = __uid__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class ApiTestNtf_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.ApiTestNtf.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.ApiTestNtf.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::Shared.Protocol.ErrCode>().Serialize(ref writer, value.code, options);
        }

        public global::Shared.Message.ApiTestNtf.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Shared.Protocol.ErrCode);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Shared.Protocol.ErrCode>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.ApiTestNtf.Callback();
            ____result.code = __code__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class ChangeNameReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.ChangeNameReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.ChangeNameReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.name, options);
            formatterResolver.GetFormatterWithVerify<global::Shared.Message.ChangeNameReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Shared.Message.ChangeNameReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __name__ = default(string);
            var __callback__ = default(global::Shared.Message.ChangeNameReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __name__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Shared.Message.ChangeNameReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.ChangeNameReq();
            ____result.name = __name__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class ChangeNameReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.ChangeNameReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.ChangeNameReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::Shared.Protocol.ErrCode>().Serialize(ref writer, value.code, options);
        }

        public global::Shared.Message.ChangeNameReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Shared.Protocol.ErrCode);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Shared.Protocol.ErrCode>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.ChangeNameReq.Callback();
            ____result.code = __code__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class CreateAccountReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.CreateAccountReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.CreateAccountReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.username, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.password, options);
            formatterResolver.GetFormatterWithVerify<global::Shared.Message.CreateAccountReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Shared.Message.CreateAccountReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __username__ = default(string);
            var __password__ = default(string);
            var __callback__ = default(global::Shared.Message.CreateAccountReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __username__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __password__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Shared.Message.CreateAccountReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.CreateAccountReq();
            ____result.username = __username__;
            ____result.password = __password__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class CreateAccountReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.CreateAccountReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.CreateAccountReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::Shared.Protocol.ErrCode>().Serialize(ref writer, value.code, options);
        }

        public global::Shared.Message.CreateAccountReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Shared.Protocol.ErrCode);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Shared.Protocol.ErrCode>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.CreateAccountReq.Callback();
            ____result.code = __code__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class DeleteAccountReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.DeleteAccountReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.DeleteAccountReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.username, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.password, options);
            formatterResolver.GetFormatterWithVerify<global::Shared.Message.DeleteAccountReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Shared.Message.DeleteAccountReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __username__ = default(string);
            var __password__ = default(string);
            var __callback__ = default(global::Shared.Message.DeleteAccountReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __username__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __password__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Shared.Message.DeleteAccountReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.DeleteAccountReq();
            ____result.username = __username__;
            ____result.password = __password__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class DeleteAccountReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.DeleteAccountReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.DeleteAccountReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::Shared.Protocol.ErrCode>().Serialize(ref writer, value.code, options);
        }

        public global::Shared.Message.DeleteAccountReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Shared.Protocol.ErrCode);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Shared.Protocol.ErrCode>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.DeleteAccountReq.Callback();
            ____result.code = __code__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class LoginReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.LoginReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.LoginReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.username, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.password, options);
            formatterResolver.GetFormatterWithVerify<global::Shared.Message.LoginReq.Callback>().Serialize(ref writer, value.callback, options);
        }

        public global::Shared.Message.LoginReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __username__ = default(string);
            var __password__ = default(string);
            var __callback__ = default(global::Shared.Message.LoginReq.Callback);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __username__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __password__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __callback__ = formatterResolver.GetFormatterWithVerify<global::Shared.Message.LoginReq.Callback>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.LoginReq();
            ____result.username = __username__;
            ____result.password = __password__;
            ____result.callback = __callback__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class LoginReq_CallbackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.LoginReq.Callback>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.LoginReq.Callback value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(5);
            formatterResolver.GetFormatterWithVerify<global::Shared.Protocol.ErrCode>().Serialize(ref writer, value.code, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.arg1, options);
            writer.Write(value.arg2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.arg3, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.arg4, options);
        }

        public global::Shared.Message.LoginReq.Callback Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __code__ = default(global::Shared.Protocol.ErrCode);
            var __arg1__ = default(string);
            var __arg2__ = default(ulong);
            var __arg3__ = default(string);
            var __arg4__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __code__ = formatterResolver.GetFormatterWithVerify<global::Shared.Protocol.ErrCode>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __arg1__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __arg2__ = reader.ReadUInt64();
                        break;
                    case 3:
                        __arg3__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 4:
                        __arg4__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.LoginReq.Callback();
            ____result.code = __code__;
            ____result.arg1 = __arg1__;
            ____result.arg2 = __arg2__;
            ____result.arg3 = __arg3__;
            ____result.arg4 = __arg4__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OnMatchOkReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.OnMatchOkReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.OnMatchOkReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(0);
        }

        public global::Shared.Message.OnMatchOkReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.OnMatchOkReq();
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class ResetPasswordReqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Message.ResetPasswordReq>
    {


        public void Serialize(ref MessagePackWriter writer, global::Shared.Message.ResetPasswordReq value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.username, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.email, options);
        }

        public global::Shared.Message.ResetPasswordReq Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __username__ = default(string);
            var __email__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __username__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __email__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Shared.Message.ResetPasswordReq();
            ____result.username = __username__;
            ____result.email = __email__;
            reader.Depth--;
            return ____result;
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

